buildscript {
    ext.kotlin_version = '1.4.10'
    ext.ktor_version = '1.4.0'

    repositories {
        maven {
            url "https://repo1.maven.org/maven2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.heroku.sdk.heroku-gradle" version "2.0.0"
}

apply plugin: 'kotlin'

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile("ch.qos.logback:logback-classic:1.2.3")
    compile "io.ktor:ktor-jackson:$ktor_version"
    compile "org.litote.kmongo:kmongo:4.1.3"
    compile "org.litote.kmongo:kmongo-coroutine:4.1.3"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'io.ktor', name: 'ktor-server-test-host', version: '1.4.1'
    testCompile group: 'io.mockk', name: 'mockk', version: '1.10.2'
    testCompile group: 'org.jetbrains.spek', name: 'spek-api', version: '1.1.5'
}

task stage(dependsOn: ['build', 'clean'])

build.mustRunAfter clean

jar {
    manifest {
        attributes 'Main-Class': 'AppServer'
    }

    from {
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}